{"version":3,"sources":["Components/MaterialDialog.js","Components/EventDetails.js","Components/RegisteredStudents.js","Components/MaterialTable.js","Components/ManageEvents.js","Components/FullScreenDialog.js","Components/Question.js","Components/AddQuestionContent.js","Components/ManageSurvey.js","Components/StudentDetails.js","Components/ManageStudents.js","Components/SurveyResults.js","Components/SurveyDetails.js","Components/SurveyQuestions.js","Components/MenuAppBar.js","App.js","serviceWorker.js","index.js"],"names":["DialogTitle","makeStyles","table","minWidth","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","textField","marginLeft","marginRight","width","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","MaterialDialog","Dialog","handleClose","aria-labelledby","open","maxWidth","fullWidth","id","title","dividers","noFooter","buttons","map","button","EventDetails","TextField","label","style","InputLabelProps","shrink","multiline","type","useStyles","createData","usn","name","email","phone","branch","registered","rows","RegisteredStudents","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","key","scope","calories","fat","carbs","protein","MaterialTable","React","useState","setOpen","childProps","setChildProps","handleSave","handleSaveChange","handleDeleteConfirm","Button","marginBottom","autoFocus","size","e","eventId","console","log","DialogContentText","ManageEvents","Toolbar","appBar","flex","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","fullScreen","TransitionComponent","AppBar","edge","close","Question","question","options","option","index","handleQuestionEdit","handleQuestionDelete","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","AddQuestionContent","show","setShow","vals","setVals","useEffect","ques","val","isListField","fieldKey","onFinish","values","Item","rules","required","message","display","alignItems","initialValue","height","List","fields","add","remove","field","validateTrigger","whitespace","noStyle","placeholder","MinusCircleOutlined","length","PlusOutlined","ManageSurvey","fullOpen","setFullOpen","fullDialogProps","setFullDialogProps","handleAddQuestion","setFooter","handleFullClose","StudentDetails","ManageStudents","SurveyResults","SurveyDetails","SurveyQuestions","match","params","history","createBrowserHistory","zIndex","drawer","flexGrow","flexShrink","drawerPaper","drawerContainer","overflow","content","MenuAppBar","auth","anchorEl","setAnchorEl","setTitle","Boolean","location","hash","onItemClick","CssBaseline","noWrap","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","paper","ListItem","selected","Link","to","ListItemIcon","ListItemText","primary","Divider","exact","path","App","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"ugBAgDMA,GAxBYC,YAAW,CACzBC,MAAO,CACHC,SAAU,OAsBEC,aAlBL,SAACC,GAAD,MAAY,CACvBC,KAAM,CACFC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAE3BC,YAAa,CACTC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBK,MAAOT,EAAMU,QAAQC,KAAK,MAE9BC,UAAW,CACPC,WAAYb,EAAMI,QAAQ,GAC1BU,YAAad,EAAMI,QAAQ,GAC3BW,MAAO,WAIKhB,EAAmB,SAACiB,GAAW,IACvCC,EAAyCD,EAAzCC,SAAUC,EAA+BF,EAA/BE,QAASC,EAAsBH,EAAtBG,QAAYC,EADO,YACGJ,EADH,kCAE9C,OACI,kBAAC,IAAD,eAAgBK,mBAAiB,EAACC,UAAWJ,EAAQjB,MAAUmB,GAC3D,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAAMP,GACzBE,EACG,kBAACM,EAAA,EAAD,CAAYC,aAAW,QAAQJ,UAAWJ,EAAQb,YAAasB,QAASR,GACpE,kBAAC,IAAD,OAEJ,UAKVS,EAAgB7B,aAAW,SAACC,GAAD,MAAY,CACzCC,KAAM,CACFE,QAASH,EAAMI,QAAQ,OAFTL,CAIlB8B,KAEEC,EAAgB/B,aAAW,SAACC,GAAD,MAAY,CACzCC,KAAM,CACFC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,OAHTL,CAKlBgC,KA+BWC,MA7Bf,SAAwBhB,GAEpB,OACI,6BACI,kBAACiB,EAAA,EAAD,CACId,QAASH,EAAMkB,YACfC,kBAAgB,0BAChBC,KAAMpB,EAAMoB,KACZC,SAAUrB,EAAMqB,SAChBC,UAAWtB,EAAMsB,WAEjB,kBAAC,EAAD,CAAaC,GAAG,0BAA0BpB,QAASH,EAAMkB,aACpDlB,EAAMwB,OAEX,kBAAC,EAAD,CAAeC,SAAUzB,EAAMyB,UAC1BzB,EAAMY,gBAETZ,EAAM0B,UACJ,kBAAC,EAAD,KACK1B,EAAM2B,SAAW3B,EAAM2B,QAAQC,KAAI,SAAAC,GAAM,OACtCA,S,SCGbC,MA/Ff,WACI,OACI,6BACI,kBAACC,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,OACNC,MAAO,CAAE/C,OAAQ,GAGjBoC,WAAS,EACTpC,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,KAGhB,kBAACJ,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,cACNC,MAAO,CAAE/C,OAAQ,GAGjBoC,WAAS,EACTc,WAAS,EACTlD,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,KAGhB,kBAACJ,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,QACNC,MAAO,CAAE/C,OAAQ,GAIjBA,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,KAGhB,kBAACJ,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,OACNC,MAAO,CAAE/C,OAAQ,GAIjBmD,KAAK,OACLnD,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,KAGhB,kBAACJ,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,OACNC,MAAO,CAAE/C,OAAQ,GAIjBmD,KAAK,OACLnD,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,KAGhB,kBAACJ,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,MACNC,MAAO,CAAE/C,OAAQ,GAIjBA,OAAO,SACPmD,KAAK,SACLH,gBAAiB,CACbC,QAAQ,KAGhB,kBAACJ,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,aACNC,MAAO,CAAE/C,OAAQ,GAIjBA,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,O,SCjFtBG,EAAY1D,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAId,SAASyD,EAAWC,EAAKC,EAAMC,EAAOC,EAAOC,EAAQC,GACnD,MAAO,CAAEL,MAAKC,OAAMC,QAAOC,QAAOC,SAAQC,cAG5C,IAAMC,EAAO,CACXP,EAAW,iBAAkB,IAAK,EAAK,GAAG,MAAO,GACjDA,EAAW,qBAAsB,IAAK,EAAK,GAAI,MAAO,KACtDA,EAAW,SAAU,IAAK,GAAM,GAAI,MAAO,GAC3CA,EAAW,UAAW,IAAK,IAAK,GAAI,MAAO,KAC3CA,EAAW,cAAe,IAAK,GAAM,GAAI,MAAO,MAGnC,SAASQ,IACtB,IAAM7C,EAAUoC,IAEhB,OACE,kBAACU,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAO7C,UAAWJ,EAAQrB,MAAO6B,aAAW,gBAC1C,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,UACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,mBAGJ,kBAACC,EAAA,EAAD,KACGV,EAAKlB,KAAI,SAAC6B,GAAD,OACR,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAIhB,MACjB,kBAACa,EAAA,EAAD,CAAWL,UAAU,KAAKU,MAAM,OAC7BF,EAAIjB,KAEP,kBAACc,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIhB,MAC/B,kBAACa,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIf,OAC/B,kBAACY,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAId,OAC/B,kBAACW,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIb,QAC/B,kBAACU,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIZ,mBC5B7C,IAAMP,EAAY1D,YAAW,CACzBC,MAAO,CACHC,SAAU,OAIlB,SAASyD,EAAWE,EAAMmB,EAAUC,EAAKC,EAAOC,GAC5C,MAAO,CAAEtB,OAAMmB,WAAUC,MAAKC,QAAOC,WAGzC,IAAMjB,EAAO,CACTP,EAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,EAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/CA,EAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,EAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,EAAW,cAAe,IAAK,GAAM,GAAI,MAqB9B,SAASyB,EAAchE,GAClC,IAAME,EAAUoC,IADyB,EAEjB2B,IAAMC,UAAS,GAFE,mBAElC9C,EAFkC,KAE5B+C,EAF4B,OAILF,IAAMC,WAJD,mBAIlCE,EAJkC,KAItBC,EAJsB,KAMnCnD,EAAc,WAChBiD,GAAQ,IA+DNG,EAAa,WACfH,GAAQ,IAGNI,EAAmB,WACrBJ,GAAQ,IAGNK,EAAsB,WACxBL,GAAQ,IAmBZ,OACI,6BACI,kBAACM,EAAA,EAAD,CAAQjE,QAAQ,YAAYf,MAAM,UAAUwC,MAAO,CAAEyC,aAAc,QAAU/D,QAjD9D,WAEnB0D,EAAc,CAEVnD,cACAN,cAAe,kBAAC,EAAD,MACfe,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAASO,EAAazB,MAAM,WAA9C,SAGF,kBAACgF,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAAS2D,EAAY7E,MAAM,WAA7C,SAGRgC,UAAU,EACVD,MAAM,YACNH,SAAU,OAEd8C,GAAQ,KAiCJ,aACA,kBAACnB,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAO7C,UAAWJ,EAAQrB,MAAO+F,KAAK,QAAQlE,aAAW,gBACrD,kBAAC0C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,UACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,kBAGR,kBAACC,EAAA,EAAD,KACKV,EAAKlB,KAAI,SAAC6B,GAAD,OACN,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAIhB,MACf,kBAACa,EAAA,EAAD,CAAWL,UAAU,KAAKU,MAAM,OAC3BF,EAAIhB,MAET,kBAACa,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIG,UAC/B,kBAACN,EAAA,EAAD,CAAWC,MAAM,UACb,yBAAKjD,UAAU,eACX,kBAACG,EAAA,EAAD,CAAYH,UAAU,oBAAoBb,MAAM,UAAUiB,aAAW,cAAcuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OAzF7HC,EAyF+IrB,EAAIhB,KAxFnKsC,QAAQC,IAAIF,GACZT,EAAc,CAEVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,KAAmB,kBAAC,EAAD,OAClCtD,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAASO,EAAazB,MAAM,WAA9C,SAGF,kBAACgF,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAAS4D,EAAkB9E,MAAM,WAAnD,iBAGRgC,UAAU,EACVD,MAAM,aACNsD,UACAzD,SAAU,YAEd8C,GAAQ,GAjBO,IAACW,IA0FoB,kBAAC,IAAD,OAEJ,kBAACrE,EAAA,EAAD,CAAYH,UAAU,QAAQb,MAAM,UAAUiB,aAAW,gBAAgBuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OAjHjHC,EAiHqIrB,EAAIhB,KAhH3JsC,QAAQC,IAAIF,GACZT,EAAc,CACVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,CAAmB1D,GAAG,4BAAtB,4HAGfI,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQ9D,QAASO,EAAazB,MAAM,WAApC,UAGF,kBAACgF,EAAA,EAAD,CAAQ9D,QAAS6D,EAAqB/E,MAAM,UAAUkF,WAAS,GAA/D,YAGRlD,UAAU,EACVD,MAAM,iBACNsD,UACAzD,SAAU,YAEd8C,GAAQ,GAlBS,IAACW,IAkHkB,kBAAC,IAAD,SAIZ,kBAACxB,EAAA,EAAD,CAAWC,MAAM,UAAS,kBAACkB,EAAA,EAAD,CAAQjE,QAAQ,YAAYf,MAAM,UAAUkB,QAAS,kBA9C1EmE,EA8CwGrB,EAAIhB,KA7CzI4B,EAAc,CAEVnD,cACAN,cAAe,kBAACmC,EAAD,MACfpB,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAASO,EAAazB,MAAM,WAA9C,UAGVgC,UAAU,EACVD,MAAM,sBACNH,SAAU,KACVyD,iBAEJX,GAAQ,GAboB,IAACW,IA8CqB,6BAQ9C,kBAAC,EAAD,eAAgB1D,KAAMA,GAAUgD,KCrL7Bc,MAZf,SAAsBlF,GAClB,OACI,6BACI,kBAACmF,EAAA,EAAD,MACA,yBAAK7E,UAAU,cAAf,iBAGA,kBAAC0D,EAAD,Q,kBCDN1B,EAAY1D,aAAW,SAACI,GAAD,MAAY,CACrCoG,OAAQ,CACJ9F,SAAU,YAEdkC,MAAO,CACH3B,WAAYb,EAAMI,QAAQ,GAC1BiG,KAAM,OAIRC,GAAarB,IAAMsB,YAAW,SAAoBvF,EAAOwF,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASxF,OA8BhC2F,OA3Bf,SAA0B3F,GACtB,IAAME,EAAUoC,IAEhB,OACI,6BACI,kBAACrB,EAAA,EAAD,CAAQ2E,YAAU,EAACxE,KAAMpB,EAAMoB,KAAMjB,QAASH,EAAMkB,YAAa2E,oBAAqBP,IAClF,kBAACQ,EAAA,EAAD,CAAQxF,UAAWJ,EAAQkF,QACvB,kBAACD,EAAA,EAAD,KACI,kBAAC1E,EAAA,EAAD,CAAYsF,KAAK,QAAQtG,MAAM,UAAUkB,QAASX,EAAMkB,YAAaR,aAAW,SAC5E,kBAAC,IAAD,OAEJ,kBAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQsB,OACvCxB,EAAMwB,OAEX,kBAACiD,EAAA,EAAD,CAAQE,WAAS,EAAClF,MAAM,UAAUkB,QAASX,EAAMkB,aAC5ClB,EAAMgG,SAInB,yBAAK1F,UAAU,8BACVN,EAAMY,kBClBZqF,OAtBf,SAAkBjG,GACd,OACI,yBAAKM,UAAU,iBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBAAmB,wCAAlC,IAAmD,uBAAG2B,MAAO,CAAEpC,WAAY,IAAMG,EAAMkG,WACvF,yBAAK5F,UAAU,WAAYN,EAAMmG,QAAQvE,KAAI,SAACwE,EAAQC,GAAT,OACzC,2BAAIA,EAAQ,EAAZ,KAAiBD,EAAjB,UAIR,yBAAK9F,UAAU,kBACX,kBAACG,EAAA,EAAD,CAAYH,UAAU,oBAAoBb,MAAM,UAAUiB,aAAW,cAAcuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OAAO7E,EAAMsG,mBAAmBtG,EAAMuB,MAC/I,kBAAC,IAAD,CAAUU,MAAO,CAAExC,MAAO,YAE9B,kBAACgB,EAAA,EAAD,CAAYH,UAAU,QAAQb,MAAM,UAAUiB,aAAW,gBAAgBuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OAAO7E,EAAMuG,qBAAqBvG,EAAMuB,MACvI,kBAAC,IAAD,CAAYU,MAAO,CAAExC,MAAO,e,wCCZ1C+G,GAAiB,CACnBC,SAAU,CACNC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEhBE,WAAY,CACRH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAGdG,GAA6B,CAC/BD,WAAY,CACRH,GAAI,CAAEC,KAAM,GAAII,OAAQ,GACxBH,GAAI,CAAED,KAAM,GAAII,OAAQ,KAuKjBC,OAlKf,SAA4BhH,GAAQ,IAAD,EAERkE,oBAAS,GAFD,mBAExB+C,EAFwB,KAEnBC,EAFmB,OAQPhD,mBAAS,IARF,mBAQxBiD,EARwB,KAQlBC,EARkB,KAqB/B,OAXAC,qBAAU,WACNrH,EAAMsH,MAAQF,EAAQpH,EAAMsH,KAAKnB,QAAQvE,KAAI,SAAC2F,EAAKlB,GAC/C,MAAO,CACH5D,KAAM4D,EACN3C,IAAK2C,EAAQ,EACbmB,aAAa,EACbC,SAAUpB,EAAM,EAChBkB,IAAIA,SAEb,IAGC,6BACI,kBAAC,KAAD,eAAM9E,KAAK,qBAAwBqE,GAAnC,CAA+DY,SAnBtD,SAAAC,GACb5C,QAAQC,IAAI,2BAA4B2C,MAmBhC,kBAAC,KAAKC,KAAN,CACI5F,MAAM,YACNS,KAAK,WACLoF,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,0BAAM9F,MAAO,CAAExC,MAAO,QAAtB,4BAGjBwC,MAAO,CAAE+F,QAAS,OAAQC,WAAY,SAAUvD,aAAc,IAC9DwD,aAAclI,EAAMsH,KAAOtH,EAAMsH,KAAKpB,SAAW,IAEjD,kBAAC,KAAD,CAAOjE,MAAO,CAAElC,MAAO,QAASoI,OAAQ,OAE5C,kBAAC,KAAKC,KAAN,CAAW3F,KAAK,YACX,SAAC4F,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OAKb,OACI,6BACKtB,GAAQE,EAAKvF,KAAI,SAAC4G,EAAOnC,GAAR,OACd,yBAAKpE,MAAO,CAAE9C,QAAS,kBAEvB,kBAAC,KAAKyI,KAAN,iBACmB,IAAVvB,EAAcG,GAAiBM,GADxC,CAGIgB,UAAU,EACVpE,IAAK8E,EAAM9E,MAGX,kBAAC,KAAKkE,KAAN,iBACQY,EADR,CAEIC,gBAAiB,CAAC,WAAY,UAC9BZ,MAAO,CACH,CACIC,UAAU,EACVY,YAAY,EACZX,QAAS,0BAAM9F,MAAO,CAAEpC,WAAY,GAAIJ,MAAO,MAAOiF,aAAc,KAA3D,+CAIjBwD,aAAcM,EAAMjB,IACpBoB,SAAO,EACP1G,MAAO,CAAE/C,OAAQ,cAEjB,kBAAC,KAAD,CAAO0J,YAAY,SAAStI,UAAU,gBAEtC,kBAACuI,GAAA,EAAD,CACIvI,UAAU,wBACV2B,MAAO,CAAE/C,OAAQ,SACjByB,QAAS,WACLuG,GAAQ,GAERqB,EAAOC,EAAM/F,cAQhC4F,EAAOzG,KAAI,SAAC4G,EAAOnC,GAAR,OACR,yBAAKpE,MAAO,CAAE9C,QAAS,kBAEnB,kBAAC,KAAKyI,KAAN,iBACmB,IAAVvB,EAAcG,GAAiBM,GADxC,CAGIgB,UAAU,EACVpE,IAAK8E,EAAM9E,MAGX,kBAAC,KAAKkE,KAAN,iBACQY,EADR,CAEIC,gBAAiB,CAAC,WAAY,UAC9BZ,MAAO,CACH,CACIC,UAAU,EACVY,YAAY,EACZX,QAAS,0BAAM9F,MAAO,CAAEpC,WAAY,GAAIJ,MAAO,MAAOiF,aAAc,KAA3D,+CAIjBwD,aAAcM,EAAMjB,IACpBoB,SAAO,EACP1G,MAAO,CAAE/C,OAAQ,cAEjB,kBAAC,KAAD,CAAO0J,YAAY,SAAStI,UAAU,gBAEzC+H,EAAOS,OAAS,EACb,kBAACD,GAAA,EAAD,CACIvI,UAAU,wBACV2B,MAAO,CAAE/C,OAAQ,SACjByB,QAAS,WACLuG,GAAQ,GAERqB,EAAOC,EAAM/F,SAIrB,UAIhB,kBAAC,KAAKmF,KAAN,CAAW3F,MAAO,CAAC/C,OAAQ,mBACvB,kBAACuF,EAAA,EAAD,CACIhF,MAAM,UACNkB,QAAS,WACLuG,GAAQ,GACRoB,KAEJrG,MAAO,CAAElC,MAAO,QAEhB,kBAACgJ,GAAA,EAAD,CAAc9G,MAAO,CAACnC,YAAa,UARvC,sBAepB,yBAAKQ,UAAU,eACX,kBAAC,KAAKsH,KAAN,KACI,kBAACnD,EAAA,EAAD,CAAQhF,MAAM,WAAd,WAIJ,kBAAC,KAAKmI,KAAN,KACI,kBAACnD,EAAA,EAAD,CAAQE,WAAS,EAAClF,MAAM,UAAU4C,KAAK,UAAvC,aCrJlBC,GAAY1D,aAAW,SAACI,GAAD,MAAY,CACrCH,MAAO,CACHC,SAAU,KAEdsG,OAAQ,CACJ9F,SAAU,YAEdkC,MAAO,CACH3B,WAAYb,EAAMI,QAAQ,GAC1BiG,KAAM,OAId,SAAS9C,GAAWC,EAAKC,EAAMC,EAAOC,EAAOC,EAAQC,GACjD,MAAO,CAAEL,MAAKC,OAAMC,QAAOC,QAAOC,SAAQC,cAG9C,IAAMC,GAAO,CACTP,GAAW,IAAK,iBAAkB,EAAK,GAAI,MAAO,GAClDA,GAAW,IAAK,qBAAsB,EAAK,GAAI,MAAO,KACtDA,GAAW,IAAK,SAAU,GAAM,GAAI,MAAO,GAC3CA,GAAW,IAAK,UAAW,IAAK,GAAI,MAAO,KAC3CA,GAAW,IAAK,cAAe,GAAM,GAAI,MAAO,MAGrC,SAASyG,GAAahJ,GACjC,IAAME,EAAUoC,KADwB,EAEhB2B,IAAMC,UAAS,GAFC,mBAEjC9C,EAFiC,KAE3B+C,EAF2B,OAGRF,IAAMC,UAAS,GAHP,mBAGjC+E,EAHiC,KAGvBC,EAHuB,OAIJjF,IAAMC,WAJF,mBAIjCE,EAJiC,KAIrBC,EAJqB,OAKMJ,IAAMC,WALZ,mBAKjCiF,EALiC,KAKhBC,EALgB,OAMZnF,IAAMC,WANM,mBAQlCmF,GARkC,UAQd,WACtBhF,EAAc,CACVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,CAAmB1D,GAAG,4BACjC,kBAAC,GAAD,CAAoB+H,WAAS,KAEjC3H,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQ9D,QAASO,EAAazB,MAAM,WAApC,UAGV,kBAACgF,EAAA,EAAD,CAAQ9D,QAAS6D,EAAqB/E,MAAM,UAAUkF,WAAS,GAA/D,SAGAlD,UAAU,EACVD,MAAO,eACPH,SAAU,KACVC,WAAW,EACXI,UAAU,IAEdyC,GAAQ,KAkDNoC,EAAuB,SAACzB,KAIxBwB,EAAqB,SAACxB,GAOxBT,EAAc,CACVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,CAAmB1D,GAAG,4BACjB,kBAAC,GAAD,CAAoB+H,WAAS,EAAChC,KATzC,CACTpB,SAAS,sBACTC,QAAS,CAAC,cAAe,kBAAmB,0BAS5CxE,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQ9D,QAASO,EAAazB,MAAM,WAApC,UAGV,kBAACgF,EAAA,EAAD,CAAQ9D,QAAS6D,EAAqB/E,MAAM,UAAUkF,WAAS,GAA/D,SAGAlD,UAAU,EACVD,MAAO,eACPH,SAAU,KACVC,WAAW,EACXI,UAAU,IAEdyC,GAAQ,IAENjD,EAAc,WAChBiD,GAAQ,IAENoF,EAAkB,WACpBL,GAAY,IAGV1E,EAAsB,WACxBL,GAAQ,IAwBZ,OACI,6BACI,kBAACgB,EAAA,EAAD,MACA,kBAAC,EAAD,eAAgB/D,KAAMA,GAAUgD,IAChC,kBAAC,GAAD,eAAkBhD,KAAM6H,EAAU/H,YAAaqI,GAAqBJ,IACpE,yBAAK7I,UAAU,cAAf,iBAGA,kBAAC0C,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAO7C,UAAWJ,EAAQrB,MAAO+F,KAAK,QAAQlE,aAAW,gBACrD,kBAAC0C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,qBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,mBAKR,kBAACC,EAAA,EAAD,KACKV,GAAKlB,KAAI,SAAC6B,GAAD,OACN,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAIhB,MACf,kBAACa,EAAA,EAAD,CAAWL,UAAU,KAAKU,MAAM,OAC3BF,EAAIhB,MAET,kBAACa,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIjB,KAC/B,kBAACc,EAAA,EAAD,CAAWC,MAAM,UACb,kBAAC9C,EAAA,EAAD,CAAYhB,MAAM,UAAUkB,QAAS,SAACkE,GAAD,OAzIjDC,EAyImErB,EAAIhB,KAvIvF2G,EAAmB,CACfG,kBACA3I,cACI,oCACI,kBAAC6D,EAAA,EAAD,CAAQjE,QAAQ,YAAYf,MAAM,UAAUwC,MAAO,CAAEyC,aAAc,QAAU/D,QAAS0I,GAAtF,gBACA,yBAAK/I,UAAU,uBACX,kBAAC,GAAD,CACI4F,SAAS,sBACTC,QAAS,CAAC,cAAe,kBAAmB,sBAC5CI,qBAAsBA,EACtBD,mBAAoBA,IAExB,kBAAC,GAAD,CACIJ,SAAS,sBACTC,QAAS,CAAC,cAAe,kBAAmB,sBAC5CI,qBAAsBA,EACtBD,mBAAoBA,IAExB,kBAAC,GAAD,CACIJ,SAAS,sBACTC,QAAS,CAAC,cAAe,kBAAmB,sBAC5CI,qBAAsBA,EACtBD,mBAAoBA,IAExB,kBAAC,GAAD,CACIJ,SAAS,sBACTC,QAAS,CAAC,cAAe,kBAAmB,sBAC5CI,qBAAsBA,EACtBD,mBAAoBA,IAExB,kBAAC,GAAD,CACIJ,SAAS,sBACTC,QAAS,CAAC,cAAe,kBAAmB,qBAAsB,mBAClEI,qBAAsBA,EACtBD,mBAAoBA,MAIpCN,MAAO,QACPxE,MAAOsD,EACPA,iBAEJoE,GAAY,GA5CG,IAACpE,IA0IgB,kBAAC,IAAD,QAGR,kBAACxB,EAAA,EAAD,CAAWC,MAAM,UACb,kBAAC9C,EAAA,EAAD,CAAYH,UAAU,QAAQb,MAAM,UAAUiB,aAAW,gBAAgBuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OAtD7GC,EAsDiIrB,EAAIhB,KArDvJsC,QAAQC,IAAIF,GACZT,EAAc,CACVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,CAAmB1D,GAAG,4BAAtB,0HAGfI,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQ9D,QAASO,EAAazB,MAAM,WAApC,UAGV,kBAACgF,EAAA,EAAD,CAAQ9D,QAAS6D,EAAqB/E,MAAM,UAAUkF,WAAS,GAA/D,YAGAlD,UAAU,EACVD,MAAO,iBACPsD,UACAzD,SAAU,YAEd8C,GAAQ,GAlBS,IAACW,IAuDc,kBAAC,IAAD,gBC7HzB0E,OAlGf,WACI,OACI,6BACI,kBAACzH,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,MACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,aAEZ,kBAACuB,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,aACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,aAEZ,kBAACuB,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,YACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,aAEZ,kBAACuB,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,QACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,aAEZ,kBAACuB,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,WACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,aAEZ,kBAACuB,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,QACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,aAEZ,kBAACuB,EAAA,EAAD,CACIR,GAAG,sBACHS,MAAM,SACNC,MAAO,CAAE/C,OAAQ,EAAGa,MAAO,OAI3Bb,OAAO,SACPgD,gBAAiB,CACbC,QAAQ,GAEZ3B,QAAQ,eC7ElB8B,GAAY1D,YAAW,CACzBC,MAAO,CACHC,SAAU,OAIlB,SAASyD,GAAWC,EAAKC,EAAMC,EAAOC,EAAOC,EAAQC,GACjD,MAAO,CAAEL,MAAKC,OAAMC,QAAOC,QAAOC,SAAQC,cAG9C,IAAMC,GAAO,CACTP,GAAW,iBAAkB,IAAK,EAAK,GAAI,MAAO,GAClDA,GAAW,qBAAsB,IAAK,EAAK,GAAI,MAAO,KACtDA,GAAW,SAAU,IAAK,GAAM,GAAI,MAAO,GAC3CA,GAAW,UAAW,IAAK,IAAK,GAAI,MAAO,KAC3CA,GAAW,cAAe,IAAK,GAAM,GAAI,MAAO,MAGrC,SAASkH,KACpB,IAAMvJ,EAAUoC,KADqB,EAEb2B,IAAMC,UAAS,GAFF,mBAE9B9C,EAF8B,KAExB+C,EAFwB,OAIDF,IAAMC,WAJL,mBAI9BE,EAJ8B,KAIlBC,EAJkB,KAM/BnD,EAAc,WAChBiD,GAAQ,IAiENG,EAAa,WACfH,GAAQ,IAGNI,EAAmB,WACrBJ,GAAQ,IAGNK,EAAsB,WACxBL,GAAQ,IAGZ,OACI,6BACI,kBAACgB,EAAA,EAAD,MACA,yBAAK7E,UAAU,cAAf,mBAGA,kBAACmE,EAAA,EAAD,CAAQjE,QAAQ,YAAYf,MAAM,UAAUwC,MAAO,CAAEyC,aAAc,QAAU/D,QArC9D,WAEnB0D,EAAc,CAEVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,SAAoB,kBAAC,GAAD,OACnCtD,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAASO,EAAazB,MAAM,WAA9C,SAGV,kBAACgF,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAAS2D,EAAY7E,MAAM,WAA7C,SAGAgC,UAAU,EACVD,MAAO,cACPH,SAAU,OAEd8C,GAAQ,KAqBJ,eACA,kBAAC,EAAD,eAAgB/C,KAAMA,GAAUgD,IAChC,kBAACpB,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAO7C,UAAWJ,EAAQrB,MAAO+F,KAAK,QAAQlE,aAAW,gBACrD,kBAAC0C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,UACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,iBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,aAGR,kBAACC,EAAA,EAAD,KACKV,GAAKlB,KAAI,SAAC6B,GAAD,OACN,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAIhB,MACf,kBAACa,EAAA,EAAD,CAAWL,UAAU,KAAKU,MAAM,OAC3BF,EAAIjB,KAET,kBAACc,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIhB,MAC/B,kBAACa,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIf,OAC/B,kBAACY,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAId,OAC/B,kBAACW,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAId,OAC/B,kBAACW,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIb,QAC/B,kBAACU,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIZ,YAC/B,kBAACS,EAAA,EAAD,CAAWC,MAAM,UACb,yBAAKjD,UAAU,eACX,kBAACG,EAAA,EAAD,CAAYH,UAAU,oBAAoBb,MAAM,UAAUiB,aAAW,cAAcuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OA9G7HC,EA8G+IrB,EAAIhB,KA7GnKsC,QAAQC,IAAIF,GACZT,EAAc,CAEVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,SAAoB,kBAAC,GAAD,OACnCtD,QAAS,CACL,kBAAC8C,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAASO,EAAazB,MAAM,WAA9C,SAGA,kBAACgF,EAAA,EAAD,CAAQE,WAAS,EAAChE,QAAS4D,EAAkB9E,MAAM,WAAnD,iBAIJgC,UAAU,EACVD,MAAO,aACPsD,UACAzD,SAAU,YAEd8C,GAAQ,GAnBO,IAACW,IA+GoB,kBAAC,IAAD,OAEJ,kBAACrE,EAAA,EAAD,CAAYH,UAAU,QAAQb,MAAM,UAAUiB,aAAW,gBAAgBuC,UAAU,OAAOtC,QAAS,SAACkE,GAAD,OA3FjHC,EA2FqIrB,EAAIhB,KA1F3JsC,QAAQC,IAAIF,GACZT,EAAc,CACVnD,cACAN,cAAe,kBAACqE,EAAA,EAAD,CAAmB1D,GAAG,4BAAtB,qHAGfI,QAAS,CAAC,kBAAC8C,EAAA,EAAD,CAAQ9D,QAASO,EAAazB,MAAM,WAApC,UAGV,kBAACgF,EAAA,EAAD,CAAQ9D,QAAS6D,EAAqB/E,MAAM,UAAUkF,WAAS,GAA/D,YAGAlD,UAAU,EACVD,MAAO,iBACPsD,UACAzD,SAAU,YAEd8C,GAAQ,GAlBS,IAACW,IA4FkB,kBAAC,IAAD,iBCpJ7B4E,OATf,WACI,OACI,6BACI,kBAACvE,EAAA,EAAD,MADJ,mBCOOwE,OATf,WACI,OACI,6BACI,kBAACxE,EAAA,EAAD,MADJ,mBCgBOyE,OAjBf,SAAyB5J,GAKrB,OACI,6BACI,kBAACmF,EAAA,EAAD,MACA,yBAAK7E,UAAU,cACVN,EAAM6J,MAAMC,OAAOhF,SAExB,kBAACL,EAAA,EAAD,CAAQjE,QAAQ,YAAYf,MAAM,UAAUwC,MAAO,CAAEyC,aAAc,QAAU/D,QAT3D,cASlB,kB,mMCuBNoJ,GAAUC,cAGV1H,GAAY1D,aAAW,SAACI,GAAD,MAAY,CACrCC,KAAM,CACF+I,QAAS,QAEb5C,OAAQ,CACJ6E,OAAQjL,EAAMiL,OAAOC,OAAS,GAElC1I,MAAO,CACH2I,SAAU,GAEdD,OAAQ,CACJnK,MAbY,IAcZqK,WAAY,GAEhBC,YAAa,CACTtK,MAjBY,KAmBhBuK,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLL,SAAU,EACVhL,QAASH,EAAMI,QAAQ,QAIhB,SAASqL,GAAWzK,GAC/B,IAAME,EAAUoC,KADsB,EAEd2B,IAAMC,UAAS,GAFD,mBAE/BwG,EAF+B,aAGNzG,IAAMC,SAAS,OAHT,mBAG/ByG,EAH+B,KAGrBC,EAHqB,OAIZ3G,IAAMC,SAAS,GAJH,mBAI/B1C,EAJ+B,KAIxBqJ,EAJwB,KAKhCzJ,EAAO0J,QAAQH,GAErBtD,qBAAU,WAIN,OAAQ0C,GAAQgB,SAASC,MACzB,IAAK,IACGH,EAAS,GACT,MACJ,IAAK,UACDA,EAAS,GACT,MACJ,IAAK,iBACDA,EAAS,GACT,MACJ,IAAK,YACDA,EAAS,GACT,MACJ,QACIA,EAAS,MAGlB,CAACd,GAAQgB,WAEZ,IAQM7J,EAAc,WAChB0J,EAAY,OAGVK,EAAc,SAACzJ,GACjBqJ,EAASrJ,IAGb,OACI,yBAAKlB,UAAWJ,EAAQjB,MACpB,kBAACiM,GAAA,EAAD,MACA,kBAACpF,EAAA,EAAD,CAAQxG,SAAS,QAAQgB,UAAWJ,EAAQkF,QACxC,kBAACD,EAAA,EAAD,KACI,kBAAC5E,EAAA,EAAD,CAAYC,QAAQ,KAAK2K,QAAM,EAAC7K,UAAWJ,EAAQsB,OAAnD,iCAGCkJ,GACG,6BACI,kBAACjK,EAAA,EAAD,CACIC,aAAW,0BACX0K,gBAAc,cACdC,gBAAc,OACd1K,QA1BT,SAAC2K,GAChBV,EAAYU,EAAMC,gBA0BM9L,MAAM,WAEN,kBAAC,KAAD,OAEJ,kBAAC+L,GAAA,EAAD,CACIjK,GAAG,cACHoJ,SAAUA,EACVc,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBvK,KAAMA,EACNjB,QAASe,GAET,kBAAC4K,GAAA,EAAD,CAAUnL,QAASO,GAAnB,WACA,kBAAC4K,GAAA,EAAD,CAAUnL,QAASO,GAAnB,kBAMpB,kBAAC,IAAD,CAAQ6I,QAASA,IACb,kBAACgC,GAAA,EAAD,CACIzL,UAAWJ,EAAQgK,OACnB1J,QAAQ,YACRN,QAAS,CACL8L,MAAO9L,EAAQmK,cAGnB,kBAAClF,EAAA,EAAD,MACA,yBAAK7E,UAAWJ,EAAQoK,iBACpB,kBAAClC,GAAA,EAAD,KACI,kBAAC6D,GAAA,EAAD,CAAUC,SAAoB,IAAV1K,EAA4BK,QAAM,EAAC6B,IAAI,gBAAgBT,UAAWkJ,IAAMC,GAAG,IAAIzL,QAAS,kBAAMsK,EAAY,KAC1H,kBAACoB,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAE1B,kBAACN,GAAA,EAAD,CAAUC,SAAoB,IAAV1K,EAA4BK,QAAM,EAAC6B,IAAI,gBAAgBT,UAAWkJ,IAAMC,GAAG,UAAUzL,QAAS,kBAAMsK,EAAY,KAChI,kBAACoB,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAE1B,kBAACN,GAAA,EAAD,CAAUC,SAAoB,IAAV1K,EAA4BK,QAAM,EAAC6B,IAAI,iBAAiBT,UAAWkJ,IAAMC,GAAG,iBAAiBzL,QAAS,kBAAMsK,EAAY,KACxI,kBAACoB,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qBAG9B,kBAACC,GAAA,EAAD,MACA,kBAACpE,GAAA,EAAD,KACI,kBAAC6D,GAAA,EAAD,CAAUC,SAAoB,IAAV1K,EAA4BK,QAAM,EAAC6B,IAAI,kBAAkBT,UAAWkJ,IAAMC,GAAG,YAAYzL,QAAS,kBAAMsK,EAAY,KACpI,kBAACoB,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAKtC,0BAAMjM,UAAWJ,EAAQsK,SACrB,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,IAAIzJ,UAAWiC,IACjC,kBAAC,IAAD,CAAOuH,OAAK,EAACC,KAAK,mBAAmBzJ,UAAW2G,KAChD,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,UAAUzJ,UAAW+F,KACvC,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,iBAAiBzJ,UAAWyG,KAC9C,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,YAAYzJ,UAAWwG,KACzC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,kBAAkBzJ,UAAW0G,QCpLpDgD,OARf,WACE,OACE,yBAAKrM,UAAU,OACb,kBAACmK,GAAD,QCIcK,QACW,cAA7B8B,OAAO7B,SAAS8B,UAEe,UAA7BD,OAAO7B,SAAS8B,UAEhBD,OAAO7B,SAAS8B,SAAShD,MACvB,2DCZNiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3I,QAAQ2I,MAAMA,EAAM3F,c","file":"static/js/main.acf0b148.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '28ch',\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nfunction MaterialDialog(props) {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                onClose={props.handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={props.open}\r\n                maxWidth={props.maxWidth}\r\n                fullWidth={props.fullWidth}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\r\n                    {props.title}\r\n                </DialogTitle>\r\n                <DialogContent dividers={props.dividers}>\r\n                    {props.DialogContent}\r\n                </DialogContent>\r\n                {!props.noFooter &&\r\n                    <DialogActions>\r\n                        {props.buttons && props.buttons.map(button => (\r\n                            button\r\n                        ))}\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaterialDialog\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction EventDetails() {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Name\"\r\n                style={{ margin: 8 }}\r\n                // placeholder={undefined}\r\n                // helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Description\"\r\n                style={{ margin: 8 }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                fullWidth\r\n                multiline\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Venue\"\r\n                style={{ margin: 8 }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Date\"\r\n                style={{ margin: 8 }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                type=\"date\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Time\"\r\n                style={{ margin: 8 }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                type=\"time\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Fee\"\r\n                style={{ margin: 8 }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Organizers\"\r\n                style={{ margin: 8 }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventDetails","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(usn, name, email, phone, branch, registered) {\r\n  return { usn, name, email, phone, branch, registered };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24,'ISE', 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 'ISE', 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 'ISE', 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 'ISE', 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 'ISE', 3.9),\r\n];\r\n\r\nexport default function RegisteredStudents() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>USN</TableCell>\r\n            <TableCell align=\"center\">Name</TableCell>\r\n            <TableCell align=\"center\">Email</TableCell>\r\n            <TableCell align=\"center\">Phone</TableCell>\r\n            <TableCell align=\"center\">Branch</TableCell>\r\n            <TableCell align=\"center\">Registered On</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.usn}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.name}</TableCell>\r\n              <TableCell align=\"center\">{row.email}</TableCell>\r\n              <TableCell align=\"center\">{row.phone}</TableCell>\r\n              <TableCell align=\"center\">{row.branch}</TableCell>\r\n              <TableCell align=\"center\">{row.registered}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MaterialDialog from './MaterialDialog'\r\nimport EventDetails from './EventDetails'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport RegisteredStudents from './RegisteredStudents'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '28ch',\r\n    },\r\n});\r\n\r\nexport default function MaterialTable(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    // const [content, setContent] = React.useState()\r\n    const [childProps, setChildProps] = React.useState()\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDelete = (eventId) => {\r\n        console.log(eventId)\r\n        setChildProps({\r\n            handleClose,\r\n            DialogContent: <DialogContentText id=\"alert-dialog-description\">\r\n                                Deleting this will delete the Survey questions associated with this event. Are you sure you want to delete this event?\",\r\n                            </DialogContentText>,\r\n            buttons: [<Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>,\r\n                    <Button onClick={handleDeleteConfirm} color=\"primary\" autoFocus>\r\n                        Confirm\r\n                    </Button>],\r\n            dividers: false,\r\n            title:'Confirm Delete',\r\n            eventId,\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleEdit = (eventId) => {\r\n        console.log(eventId)\r\n        setChildProps({\r\n            // ...childProps,\r\n            handleClose,\r\n            DialogContent: <DialogContentText><EventDetails /></DialogContentText>,\r\n            buttons: [<Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>,\r\n                    <Button autoFocus onClick={handleSaveChange} color=\"primary\">\r\n                        Save changes\r\n                    </Button>],\r\n            dividers: true,\r\n            title:'Edit Event',\r\n            eventId,\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleAddEvent = () => {\r\n        // console.log(e.target.getAttribute('eventId'))\r\n        setChildProps({\r\n            // ...childProps,\r\n            handleClose,\r\n            DialogContent: <EventDetails />,\r\n            buttons: [<Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>,\r\n                    <Button autoFocus onClick={handleSave} color=\"primary\">\r\n                        Save\r\n                    </Button>],\r\n            dividers: true,\r\n            title:'Add Event',\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleSaveChange = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeleteConfirm = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleViewParticipation = (eventId) => {\r\n        setChildProps({\r\n            // ...childProps,\r\n            handleClose,\r\n            DialogContent: <RegisteredStudents />,\r\n            buttons: [<Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>],\r\n            dividers: true,\r\n            title:'Registered Students',\r\n            maxWidth: \"lg\",\r\n            eventId,\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" style={{ marginBottom: \"12px\" }} onClick={handleAddEvent}>Add Event</Button>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Event Name</TableCell>\r\n                            <TableCell align=\"center\">Created On</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                            <TableCell align=\"center\">Participants</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\" >\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{row.calories}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div className=\"action-cell\">\r\n                                        <IconButton className=\"edit-button icons\" color=\"primary\" aria-label=\"edit button\" component=\"span\" onClick={(e) => handleEdit(row.name)}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"icons\" color=\"primary\" aria-label=\"delete button\" component=\"span\" onClick={(e) => handleDelete(row.name)}>\r\n                                            <DeleteIcon/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\"><Button variant=\"contained\" color=\"primary\" onClick={() => handleViewParticipation(row.name)}>View Participants</Button></TableCell>\r\n                                {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer >\r\n\r\n            <MaterialDialog open={open} {...childProps} />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { Button } from '@material-ui/core'\r\nimport MaterialTable from './MaterialTable'\r\n\r\nfunction ManageEvents(props) {\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            <div className=\"main-title\">\r\n                Manage Events\r\n            </div>\r\n            <MaterialTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageEvents\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction FullScreenDialog(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.open} onClose={props.handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={props.handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            {props.title}\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={props.handleClose}>\r\n                            {props.close}\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className=\"full-screen-dialog-content\">\r\n                    {props.DialogContent}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FullScreenDialog\r\n","import React from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction Question(props) {\r\n    return (\r\n        <div className=\"question-root\">\r\n            <div className=\"question\">\r\n                <div className=\"question-heading\"><p>Question:</p> <p style={{ marginLeft: 5 }}>{props.question}</p></div>\r\n                <div className=\"options\" >{props.options.map((option, index) => (\r\n                    <p>{index + 1}. {option} </p>\r\n                ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"question-hover\">\r\n                <IconButton className=\"edit-button icons\" color=\"primary\" aria-label=\"edit button\" component=\"span\" onClick={(e) => props.handleQuestionEdit(props.id)}>\r\n                    <EditIcon style={{ color: 'white' }} />\r\n                </IconButton>\r\n                <IconButton className=\"icons\" color=\"primary\" aria-label=\"delete button\" component=\"span\" onClick={(e) => props.handleQuestionDelete(props.id)}>\r\n                    <DeleteIcon style={{ color: 'white' }} />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Form, Input } from 'antd';\r\nimport Button from '@material-ui/core/Button';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n// import 'antd/dist/antd.css';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 20 },\r\n    },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n    wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 },\r\n    },\r\n};\r\n\r\n\r\nfunction AddQuestionContent(props) {\r\n\r\n    const [show,setShow] = useState(true)\r\n\r\n    const onFinish = values => {\r\n        console.log('Received values of form:', values);\r\n    };\r\n\r\n    const [vals, setVals] = useState([])\r\n\r\n    useEffect(() => {\r\n        props.ques && setVals(props.ques.options.map((val, index) => {\r\n            return {\r\n                name: index,\r\n                key: index + 1,\r\n                isListField: true,\r\n                fieldKey: index+1,\r\n                val:val,\r\n        }}))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Form name=\"dynamic_form_item\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\r\n                <Form.Item\r\n                    label=\"Question:\"\r\n                    name=\"question\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <span style={{ color: 'red' }}>Please input question!</span>,\r\n                        },\r\n                    ]}\r\n                    style={{ display: \"flex\", alignItems: \"center\", marginBottom: 15 }}\r\n                    initialValue={props.ques ? props.ques.question : \"\"}\r\n                >\r\n                    <Input style={{ width: '450px', height: 40 }} />\r\n                </Form.Item>\r\n                <Form.List name=\"options\">\r\n                    {(fields, { add, remove }) => {\r\n                        // fields.push(...vals)\r\n                        // props.ques.options.map(field => add())\r\n                        // console.log(fields)\r\n                        // .concat(...props.ques.options)\r\n                        return (\r\n                            <div>\r\n                                {show && vals.map((field, index) => (\r\n                                    <div style={{ padding: '10px 0 10px 0' }}>\r\n                                    {/* {console.log(field) && <></>} */}\r\n                                    <Form.Item\r\n                                        {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                        // label={index === 0 ? 'Option' : ''}\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    // initialValue={field}\r\n                                    >\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            validateTrigger={['onChange', 'onBlur']}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    whitespace: true,\r\n                                                    message: <span style={{ marginLeft: 20, color: 'red', marginBottom: 20 }}>Please input Option or delete this field.</span>,\r\n                                                },\r\n                                            ]}\r\n                                            //set the value here\r\n                                            initialValue={field.val}\r\n                                            noStyle\r\n                                            style={{ margin: \"20px 0px\" }}\r\n                                        >\r\n                                            <Input placeholder=\"Option\" className=\"antd-input\" />\r\n                                        </Form.Item>\r\n                                            <MinusCircleOutlined\r\n                                                className=\"dynamic-delete-button\"\r\n                                                style={{ margin: '0 8px' }}\r\n                                                onClick={() => {\r\n                                                    setShow(false)\r\n                                                    // console.log(field)\r\n                                                    remove(field.name);\r\n                                                    // console.log(field)\r\n                                                }}\r\n                                            />\r\n                                    </Form.Item>\r\n                                </div>\r\n                        ))}\r\n\r\n                                {fields.map((field, index) => (\r\n                                    <div style={{ padding: '10px 0 10px 0' }}>\r\n                                        {/* {console.log(field) && <></>} */}\r\n                                        <Form.Item\r\n                                            {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                            // label={index === 0 ? 'Option' : ''}\r\n                                            required={false}\r\n                                            key={field.key}\r\n                                        // initialValue={field}\r\n                                        >\r\n                                            <Form.Item\r\n                                                {...field}\r\n                                                validateTrigger={['onChange', 'onBlur']}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        whitespace: true,\r\n                                                        message: <span style={{ marginLeft: 20, color: 'red', marginBottom: 20 }}>Please input Option or delete this field.</span>,\r\n                                                    },\r\n                                                ]}\r\n                                                //set the value here\r\n                                                initialValue={field.val}\r\n                                                noStyle\r\n                                                style={{ margin: \"20px 0px\" }}\r\n                                            >\r\n                                                <Input placeholder=\"Option\" className=\"antd-input\" />\r\n                                            </Form.Item>\r\n                                            {fields.length > 1 ? (\r\n                                                <MinusCircleOutlined\r\n                                                    className=\"dynamic-delete-button\"\r\n                                                    style={{ margin: '0 8px' }}\r\n                                                    onClick={() => {\r\n                                                        setShow(false)\r\n                                                        // console.log(field)\r\n                                                        remove(field.name);\r\n                                                        // console.log(field)\r\n                                                    }}\r\n                                                />\r\n                                            ) : null}\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                ))}\r\n                                <Form.Item style={{margin: '0px 0 0px 20px' }}>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={() => {\r\n                                            setShow(false)\r\n                                            add();\r\n                                        }}\r\n                                        style={{ width: '40%' }}\r\n                                    >\r\n                                        <PlusOutlined style={{marginRight: \"10px\"}}/>   Add option\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </Form.List>\r\n                <div className=\"form-footer\" >\r\n                    <Form.Item >\r\n                        <Button color=\"primary\" >\r\n                            Cancel\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Form.Item >\r\n                        <Button autoFocus color=\"primary\" type=\"submit\">\r\n                            Save\r\n                        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddQuestionContent\r\n","import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport MaterialDialog from './MaterialDialog'\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FullScreenDialog from './FullScreenDialog'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Question from './Question'\r\nimport AddQuestionContent from './AddQuestionContent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nfunction createData(usn, name, email, phone, branch, registered) {\r\n    return { usn, name, email, phone, branch, registered };\r\n}\r\n\r\nconst rows = [\r\n    createData(159, 'Frozen yoghurt', 6.0, 24, 'ISE', 4.0),\r\n    createData(237, 'Ice cream sandwich', 9.0, 37, 'ISE', 4.3),\r\n    createData(262, 'Eclair', 16.0, 24, 'ISE', 6.0),\r\n    createData(305, 'Cupcake', 3.7, 67, 'ISE', 4.3),\r\n    createData(356, 'Gingerbread', 16.0, 49, 'ISE', 3.9),\r\n];\r\n\r\nexport default function ManageSurvey(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullOpen, setFullOpen] = React.useState(false);\r\n    const [childProps, setChildProps] = React.useState()\r\n    const [fullDialogProps, setFullDialogProps] = React.useState()\r\n    const [footer, setFooter] = React.useState()\r\n\r\n    const handleAddQuestion = () => {\r\n        setChildProps({\r\n            handleClose,\r\n            DialogContent: <DialogContentText id=\"alert-dialog-description\">\r\n                <AddQuestionContent setFooter />\r\n            </DialogContentText>,\r\n            buttons: [<Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n                    </Button>,\r\n            <Button onClick={handleDeleteConfirm} color=\"primary\" autoFocus>\r\n                Save\r\n            </Button>],\r\n            dividers: true,\r\n            title: 'Add question',\r\n            maxWidth: \"sm\",\r\n            fullWidth: true,\r\n            noFooter: true,\r\n        })\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleEdit = (eventId) => {\r\n        // props.history.push(`/survey/${eventId}`)\r\n        setFullDialogProps({\r\n            handleFullClose,\r\n            DialogContent:\r\n                <>\r\n                    <Button variant=\"contained\" color=\"primary\" style={{ marginBottom: \"12px\" }} onClick={handleAddQuestion}>Add Question</Button>\r\n                    <div className=\"questions-container\">\r\n                        <Question\r\n                            question=\"How was the event ?\"\r\n                            options={[\"It was good\", \"It was moderate\", \"It was not so good\"]}\r\n                            handleQuestionDelete={handleQuestionDelete}\r\n                            handleQuestionEdit={handleQuestionEdit}\r\n                        />\r\n                        <Question\r\n                            question=\"How was the event ?\"\r\n                            options={[\"It was good\", \"It was moderate\", \"It was not so good\"]}\r\n                            handleQuestionDelete={handleQuestionDelete}\r\n                            handleQuestionEdit={handleQuestionEdit}\r\n                        />\r\n                        <Question\r\n                            question=\"How was the event ?\"\r\n                            options={[\"It was good\", \"It was moderate\", \"It was not so good\"]}\r\n                            handleQuestionDelete={handleQuestionDelete}\r\n                            handleQuestionEdit={handleQuestionEdit}\r\n                        />\r\n                        <Question\r\n                            question=\"How was the event ?\"\r\n                            options={[\"It was good\", \"It was moderate\", \"It was not so good\"]}\r\n                            handleQuestionDelete={handleQuestionDelete}\r\n                            handleQuestionEdit={handleQuestionEdit}\r\n                        />\r\n                        <Question\r\n                            question=\"How was the event ?\"\r\n                            options={[\"It was good\", \"It was moderate\", \"It was not so good\", \"Not good at all\"]}\r\n                            handleQuestionDelete={handleQuestionDelete}\r\n                            handleQuestionEdit={handleQuestionEdit}\r\n                        />\r\n                    </div>\r\n                </>,\r\n            close: \"Close\",\r\n            title: eventId,\r\n            eventId,\r\n        })\r\n        setFullOpen(true);\r\n    }\r\n\r\n    const handleQuestionDelete = (eventId) => {\r\n\r\n    }\r\n\r\n    const handleQuestionEdit = (eventId) => {\r\n        const ques = {\r\n            question:\"How was the event ?\",\r\n            options: [\"It was good\", \"It was moderate\", \"It was not so good\"]\r\n            // options:[]\r\n        }\r\n            \r\n        setChildProps({\r\n            handleClose,\r\n            DialogContent: <DialogContentText id=\"alert-dialog-description\">\r\n                                <AddQuestionContent setFooter ques={ques} />\r\n                            </DialogContentText>,\r\n            buttons: [<Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>,\r\n            <Button onClick={handleDeleteConfirm} color=\"primary\" autoFocus>\r\n                Save\r\n            </Button>],\r\n            dividers: true,\r\n            title: 'Add question',\r\n            maxWidth: \"sm\",\r\n            fullWidth: true,\r\n            noFooter: true,\r\n        })\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleFullClose = () => {\r\n        setFullOpen(false);\r\n    };\r\n\r\n    const handleDeleteConfirm = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDelete = (eventId) => {\r\n        console.log(eventId)\r\n        setChildProps({\r\n            handleClose,\r\n            DialogContent: <DialogContentText id=\"alert-dialog-description\">\r\n                Deleting this will delete the Survey questions associated with this event. Are you sure you want to delete this event?\r\n                            </DialogContentText>,\r\n            buttons: [<Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n                    </Button>,\r\n            <Button onClick={handleDeleteConfirm} color=\"primary\" autoFocus>\r\n                Confirm\r\n                    </Button>],\r\n            dividers: false,\r\n            title: 'Confirm Delete',\r\n            eventId,\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            <MaterialDialog open={open} {...childProps} />\r\n            <FullScreenDialog open={fullOpen} handleClose={handleFullClose} {...fullDialogProps} />\r\n            <div className=\"main-title\">\r\n                Manage Survey\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Event Name</TableCell>\r\n                            <TableCell align=\"center\">Created On</TableCell>\r\n                            <TableCell align=\"center\">Add / Edit Survey</TableCell>\r\n                            <TableCell align=\"center\">Delete Survey</TableCell>\r\n                            {/* <TableCell align=\"center\">Branch</TableCell> */}\r\n                            {/* <TableCell align=\"center\">Registered On</TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{row.usn}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <IconButton color=\"primary\" onClick={(e) => handleEdit(row.name)} >\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <IconButton className=\"icons\" color=\"primary\" aria-label=\"delete button\" component=\"span\" onClick={(e) => handleDelete(row.name)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction StudentDetails() {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"USN\"\r\n                style={{ margin: 8, width: '45%'}}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"First Name\"\r\n                style={{ margin: 8, width: '45%' }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Last Name\"\r\n                style={{ margin: 8, width: '45%' }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Email\"\r\n                style={{ margin: 8, width: '45%' }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Password\"\r\n                style={{ margin: 8, width: '45%' }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Phone\"\r\n                style={{ margin: 8, width: '45%' }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Branch\"\r\n                style={{ margin: 8, width: '45%' }}\r\n                // placeholder=\"Event Name\"\r\n                // helperText=\"Full width!\"\r\n                // fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentDetails\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialDialog from './MaterialDialog'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport StudentDetails from './StudentDetails'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(usn, name, email, phone, branch, registered) {\r\n    return { usn, name, email, phone, branch, registered };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 'ISE', 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 'ISE', 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 'ISE', 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 'ISE', 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 'ISE', 3.9),\r\n];\r\n\r\nexport default function ManageStudents() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    // const [content, setContent] = React.useState()\r\n    const [childProps, setChildProps] = React.useState()\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleEdit = (eventId) => {\r\n        console.log(eventId)\r\n        setChildProps({\r\n            // ...childProps,\r\n            handleClose,\r\n            DialogContent: <DialogContentText> <StudentDetails /></DialogContentText>,\r\n            buttons: [\r\n                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                    </Button>,\r\n                <Button autoFocus onClick={handleSaveChange} color=\"primary\">\r\n                    Save changes\r\n                    </Button>\r\n            ],\r\n            dividers: true,\r\n            title: 'Edit Event',\r\n            eventId,\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleDelete = (eventId) => {\r\n        console.log(eventId)\r\n        setChildProps({\r\n            handleClose,\r\n            DialogContent: <DialogContentText id=\"alert-dialog-description\">\r\n                Deleting this will delete the Student details completely. Are you sure you want to delete this Student details?\",\r\n                            </DialogContentText>,\r\n            buttons: [<Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n                    </Button>,\r\n            <Button onClick={handleDeleteConfirm} color=\"primary\" autoFocus>\r\n                Confirm\r\n                    </Button>],\r\n            dividers: false,\r\n            title: 'Confirm Delete',\r\n            eventId,\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleAddEvent = () => {\r\n        // console.log(e.target.getAttribute('eventId'))\r\n        setChildProps({\r\n            // ...childProps,\r\n            handleClose,\r\n            DialogContent: <DialogContentText> <StudentDetails /></DialogContentText>,\r\n            buttons: [<Button autoFocus onClick={handleClose} color=\"primary\">\r\n                Close\r\n                    </Button>,\r\n            <Button autoFocus onClick={handleSave} color=\"primary\">\r\n                Save\r\n                    </Button>],\r\n            dividers: true,\r\n            title: 'Add Student',\r\n            maxWidth: \"sm\",\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleSaveChange = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeleteConfirm = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            <div className=\"main-title\">\r\n                Manage Students\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" style={{ marginBottom: \"12px\" }} onClick={handleAddEvent}>Add Student</Button>\r\n            <MaterialDialog open={open} {...childProps} />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>USN</TableCell>\r\n                            <TableCell align=\"center\">Name</TableCell>\r\n                            <TableCell align=\"center\">Email</TableCell>\r\n                            <TableCell align=\"center\">Password</TableCell>\r\n                            <TableCell align=\"center\">Phone</TableCell>\r\n                            <TableCell align=\"center\">Branch</TableCell>\r\n                            <TableCell align=\"center\">Registered On</TableCell>\r\n                            <TableCell align=\"center\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.usn}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{row.name}</TableCell>\r\n                                <TableCell align=\"center\">{row.email}</TableCell>\r\n                                <TableCell align=\"center\">{row.phone}</TableCell>\r\n                                <TableCell align=\"center\">{row.phone}</TableCell>\r\n                                <TableCell align=\"center\">{row.branch}</TableCell>\r\n                                <TableCell align=\"center\">{row.registered}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div className=\"action-cell\">\r\n                                        <IconButton className=\"edit-button icons\" color=\"primary\" aria-label=\"edit button\" component=\"span\" onClick={(e) => handleEdit(row.name)}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"icons\" color=\"primary\" aria-label=\"delete button\" component=\"span\" onClick={(e) => handleDelete(row.name)}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\n\r\nfunction SurveyResults() {\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            Survey Results\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyResults\r\n","import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\n\r\nfunction SurveyDetails() {\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            Survey Details\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyDetails\r\n","import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction SurveyQuestions(props) {\r\n\r\n    const handleAddQuestion = () => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            <div className=\"main-title\">\r\n                {props.match.params.eventId}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" style={{ marginBottom: \"12px\" }} onClick={handleAddQuestion}>Add Question</Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyQuestions\r\n","import React, { useEffect } from 'react';\r\n//production\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\n//dev\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport './UI.css'\r\nimport ManageEvents from './ManageEvents'\r\nimport ManageSurvey from './ManageSurvey'\r\nimport ManageStudents from './ManageStudents'\r\nimport SurveyResults from './SurveyResults'\r\nimport SurveyDetails from './SurveyDetails'\r\nimport SurveyQuestions from './SurveyQuestions'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst history = createBrowserHistory();\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function MenuAppBar(props) {\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(true)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [title, setTitle] = React.useState(1)\r\n    const open = Boolean(anchorEl);\r\n\r\n    useEffect(() => {\r\n        // dev\r\n        // switch (history.location.pathname) {\r\n        // produciton\r\n        switch (history.location.hash) {\r\n        case '/':\r\n                setTitle(1)\r\n                break\r\n            case '/survey':\r\n                setTitle(2)\r\n                break\r\n            case '/survey-result':\r\n                setTitle(3)\r\n                break\r\n            case '/students':\r\n                setTitle(4)\r\n                break\r\n            default:\r\n                setTitle(5)\r\n\r\n        }\r\n    }, [history.location])\r\n\r\n    const handleChange = (event) => {\r\n        setAuth(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const onItemClick = (title) => {\r\n        setTitle(title);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        Event Registration and Survey\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Router history={history}>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <div className={classes.drawerContainer}>\r\n                        <List>\r\n                            <ListItem selected={title === 1 ? true : false} button key=\"Manage Events\" component={Link} to=\"/\" onClick={() => onItemClick(1)}>\r\n                                <ListItemIcon><EventIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Manage Events\" />\r\n                            </ListItem>\r\n                            <ListItem selected={title === 2 ? true : false} button key=\"Manage Survey\" component={Link} to=\"/survey\" onClick={() => onItemClick(2)}>\r\n                                <ListItemIcon><AssignmentIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Manage Survey\" />\r\n                            </ListItem>\r\n                            <ListItem selected={title === 3 ? true : false} button key=\"Survey Results\" component={Link} to=\"/survey-result\" onClick={() => onItemClick(3)}>\r\n                                <ListItemIcon><NoteIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Survey Results\" />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem selected={title === 4 ? true : false} button key=\"Manage Students\" component={Link} to=\"/students\" onClick={() => onItemClick(4)}>\r\n                                <ListItemIcon><PersonIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"Manage Students\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <Route exact path=\"/\" component={ManageEvents} />\r\n                    <Route exact path=\"/survey/:eventId\" component={SurveyQuestions} />\r\n                    <Route exact path=\"/survey\" component={ManageSurvey} />\r\n                    <Route exact path=\"/survey-result\" component={SurveyResults} />\r\n                    <Route exact path=\"/students\" component={ManageStudents} />\r\n                    <Route exact path=\"/survey-details\" component={SurveyDetails} />\r\n                    {/* <Route exact path=\"/profile\" component={Profie} /> */}\r\n                </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport MenuAppBar from './Components/MenuAppBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MenuAppBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}